package com.example.johannes.myapplication;

import android.os.Bundle;
import android.util.Log;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;



// The callback interface
interface MyCallback {
    void callbackCall();
}


/**
 * Created by johannes on 16.04.16.
 * Reference: http://developer.android.com/reference/java/net/HttpURLConnection.html
 */
public class ServerConnectionHandler {

    private static final String TAG = "ServerConnectionHandler";
    private static final String SERVERURL = "http://192.168.0.1/";

    /*
    String postBody = ""
        + "Releases\n"
        + "--------\n"
        + "\n"
        + " * _1.0_ May 6, 2013\n"
        + " * _1.1_ June 15, 2013\n"
        + " * _1.2_ August 11, 2013\n";

    Request request = new Request.Builder()
        .url("https://api.github.com/markdown/raw")
        .post(RequestBody.create(MEDIA_TYPE_MARKDOWN, postBody))
        .build();
    */

    private final OkHttpClient client = new OkHttpClient();

    public void run() throws Exception {
    	Request request = new Request.Builder()
        .url("http://publicobject.com/helloworld.txt")
        .build();

    	client.newCall(request).enqueue(new Callback() {
      		@Override public void onFailure(Call call, IOException e) {
        	e.printStackTrace();
      	}

      	@Override public void onResponse(Call call, Response response) throws IOException {
        	if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);

        	Headers responseHeaders = response.headers();
        	for (int i = 0, size = responseHeaders.size(); i < size; i++) {
          		System.out.println(responseHeaders.name(i) + ": " + responseHeaders.value(i));
        	}

        	System.out.println(response.body().string());
      	}
    });
}
    /*
    public void getStuff() {
        Log.v(TAG," getStuff ");
        URL url = null;
        try {
            url = new URL(SERVERURL);
            HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
            InputStream in = new BufferedInputStream(urlConnection.getInputStream());
            readStream(in);
            urlConnection.disconnect();

        } catch (Exception e) {
            Log.v(TAG, "Exception occured ", e);
        }

    }
    public void readStream(InputStream in){
 	byte[] contents = new byte[1024];

 	int bytesRead=0;
 	String strFileContents; 
 	while( (bytesRead = in.read(contents)) != -1){ 
    		strFileContents = new String(contents, 0, bytesRead);               
 	}
 	Log.v(strFileContents);
	
    }

    public void postStuff() {
        Log.v(TAG," postStuff ");
        URL url = null;

        try {
            url = new URL(SERVERURL);

            HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
            urlConnection.setDoOutput(true);
            urlConnection.setChunkedStreamingMode(0);

            OutputStream out = new BufferedOutputStream(urlConnection.getOutputStream());
            writeStream(out);

            InputStream in = new BufferedInputStream(urlConnection.getInputStream());
            readStream(in);


            urlConnection.disconnect();

        } catch (Exception ex) {
            Log.v(TAG, "Exception occured ", ex);
        }
    }
    */

}
